// <auto-generated />
using System;
using DittoBox.API.Shared.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DittoBox.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DittoBox.API.AccountSubscription.Domain.Models.Aggregates.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RepresentativeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DittoBox.API.AccountSubscription.Domain.Models.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("LastPaidPeriod")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("SubscriptionStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("TierId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("DittoBox.API.ContainerManagement.Domain.Models.Entities.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<double?>("Ammonia")
                        .HasColumnType("double precision");

                    b.Property<int>("ContainerSizeId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Dioxide")
                        .HasColumnType("double precision");

                    b.Property<double?>("Ethylene")
                        .HasColumnType("double precision");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<double?>("Humidity")
                        .HasColumnType("double precision");

                    b.Property<int>("LastKnownContainerStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastKnownContainerStatusReport")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LastKnownHealthStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastKnownHealthStatusReport")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Oxygen")
                        .HasColumnType("double precision");

                    b.Property<double?>("SulfurDioxide")
                        .HasColumnType("double precision");

                    b.Property<double?>("Temperature")
                        .HasColumnType("double precision");

                    b.Property<string>("Uiid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Containers");
                });

            modelBuilder.Entity("DittoBox.API.ContainerManagement.Domain.Models.Entities.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxAmmoniaThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxCarbonDioxideThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxEthyleneThreshold")
                        .HasColumnType("integer");

                    b.Property<float>("MaxHumidityThreshold")
                        .HasColumnType("real");

                    b.Property<int?>("MaxOxygenThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MaxSulfurDioxideThreshold")
                        .HasColumnType("integer");

                    b.Property<short>("MaxTemperatureThreshold")
                        .HasColumnType("smallint");

                    b.Property<int?>("MinAmmoniaThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MinCarbonDioxideThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MinEthyleneThreshold")
                        .HasColumnType("integer");

                    b.Property<float>("MinHumidityThreshold")
                        .HasColumnType("real");

                    b.Property<int?>("MinOxygenThreshold")
                        .HasColumnType("integer");

                    b.Property<int?>("MinSulfurDioxideThreshold")
                        .HasColumnType("integer");

                    b.Property<short>("MinTemperatureThreshold")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("DittoBox.API.GroupManagement.Domain.Models.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("ContainerCount")
                        .HasColumnType("integer");

                    b.Property<string>("FacilityType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfileCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DittoBox.API.GroupManagement.Domain.Models.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("PlusCode")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.ValueObjects.ProfilePrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Privilege")
                        .HasColumnType("integer");

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfilePrivileges");
                });

            modelBuilder.Entity("DittoBox.API.ContainerManagement.Domain.Models.Entities.Container", b =>
                {
                    b.HasOne("DittoBox.API.GroupManagement.Domain.Models.Entities.Group", null)
                        .WithMany("Containers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DittoBox.API.ContainerManagement.Domain.Models.ValueObjects.ContainerConditions", "ContainerConditions", b1 =>
                        {
                            b1.Property<int>("ContainerId")
                                .HasColumnType("integer");

                            b1.Property<double>("AmmoniaMax")
                                .HasColumnType("double precision");

                            b1.Property<double>("AmmoniaMin")
                                .HasColumnType("double precision");

                            b1.Property<double>("DioxideMax")
                                .HasColumnType("double precision");

                            b1.Property<double>("DioxideMin")
                                .HasColumnType("double precision");

                            b1.Property<double>("EthyleneMax")
                                .HasColumnType("double precision");

                            b1.Property<double>("EthyleneMin")
                                .HasColumnType("double precision");

                            b1.Property<double>("MaxHumidity")
                                .HasColumnType("double precision");

                            b1.Property<double>("MaxTemperature")
                                .HasColumnType("double precision");

                            b1.Property<double>("MinHumidity")
                                .HasColumnType("double precision");

                            b1.Property<double>("MinTemperature")
                                .HasColumnType("double precision");

                            b1.Property<double>("OxygenMax")
                                .HasColumnType("double precision");

                            b1.Property<double>("OxygenMin")
                                .HasColumnType("double precision");

                            b1.Property<double>("SulfurDioxideMax")
                                .HasColumnType("double precision");

                            b1.Property<double>("SulfurDioxideMin")
                                .HasColumnType("double precision");

                            b1.HasKey("ContainerId");

                            b1.ToTable("Containers");

                            b1.WithOwner()
                                .HasForeignKey("ContainerId");
                        });

                    b.Navigation("ContainerConditions");
                });

            modelBuilder.Entity("DittoBox.API.GroupManagement.Domain.Models.Entities.Group", b =>
                {
                    b.HasOne("DittoBox.API.GroupManagement.Domain.Models.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.Entities.Profile", b =>
                {
                    b.HasOne("DittoBox.API.GroupManagement.Domain.Models.Entities.Group", null)
                        .WithMany("Profiles")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.ValueObjects.ProfilePrivilege", b =>
                {
                    b.HasOne("DittoBox.API.UserProfile.Domain.Models.Entities.Profile", "Profile")
                        .WithMany("ProfilePrivileges")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("DittoBox.API.GroupManagement.Domain.Models.Entities.Group", b =>
                {
                    b.Navigation("Containers");

                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("DittoBox.API.UserProfile.Domain.Models.Entities.Profile", b =>
                {
                    b.Navigation("ProfilePrivileges");
                });
#pragma warning restore 612, 618
        }
    }
}
